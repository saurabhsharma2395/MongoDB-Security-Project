<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{{title}}</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
</head>
<body>
    <div class="restaurant-detail-container">
        <div class="restaurant-info">
            <h1>{{restaurant_dat.name}}</h1>
            <p>{{restaurant_dat.cuisine}}</p>
            <p>{{restaurant_dat.address.building}} {{restaurant_dat.address.street}}, {{restaurant_dat.address.zipcode}}</p>
            <p>Borough: {{restaurant_dat.borough}}</p>

            <!-- Edit and Delete buttons -->
            <button id="editButton" onclick="toggleEditForm()" class="btn-primary">Edit</button>
            <button onclick="deleteRestaurant('{{restaurant_dat._id}}')" class="btn-primary">Delete</button>
            <button onclick="navigateTo('/book-restaurant/{{restaurant_dat._id}}')" class="btn-primary">Book a Table</button>
        </div>

        <!-- Edit Form -->
        <div id="editForm" class="edit-form" style="display: none;">
            <textarea id="editData" rows="5" style="width: 100%;">{{json restaurant_dat}}</textarea>
            <button onclick="submitEdit('{{restaurant_dat._id}}')" class="btn-primary">Done</button>
        </div>

        <!-- Maps Image -->
        <div class="restaurant-map">
            <iframe width="300" height="300" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"
                src="https://www.openstreetmap.org/export/embed.html?bbox={{longitudeMinusOffset}},{{latitudeMinusOffset}},{{longitudePlusOffset}},{{latitudePlusOffset}}&amp;layer=mapnik&amp;marker={{restaurant_dat.address.coord.[0]}},{{restaurant_dat.address.coord.[1]}}"
                class="map-frame">
            </iframe>
            <br/>
            <small>
                <a href="https://www.openstreetmap.org/?mlat={{restaurant_dat.address.coord.[0]}}&amp;mlon={{restaurant_dat.address.coord.[1]}}#map=15/{{restaurant_dat.address.coord.[0]}}/{{restaurant_dat.address.coord.[1]}}">View Larger Map</a>
            </small>
        </div>
    </div>

    <script>
        function toggleEditForm() {
            var form = document.getElementById('editForm');
            var editButton = document.getElementById('editButton');
            var isFormVisible = form.style.display === 'block';

            form.style.display = isFormVisible ? 'none' : 'block';
            editButton.innerText = isFormVisible ? 'Edit' : 'Cancel';
        }

    async function submitEdit(id) {
    try {
        var data = JSON.parse(document.getElementById('editData').value);
        console.log('Submitting:', data);

        const query = `
            mutation UpdateRestaurant($id: ID!, $input: RestaurantInput!) {
                updateRestaurant(_id: $id, input: $input) {
                    name
                    cuisine
                    address {
                        building
                        street
                        zipcode
                        borough
                        coord
                    }
                    grades {
                        date
                        grade
                        score
                    }
                    restaurant_id
                }
            }`;

        const variables = {
            id: id,
            input: {
                name: data.name,
                cuisine: data.cuisine,
                address: data.address,
                grades: data.grades,
                restaurant_id: data.restaurant_id
            }
        };

        const response = await fetch('/graphql', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
            },
            body: JSON.stringify({ query, variables })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const result = await response.json();
        console.log('Mutation result:', result);

        if (result.errors) {
            throw new Error('Error in GraphQL response: ' + JSON.stringify(result.errors));
        }

        toggleEditForm(); // Hide the edit form
    } catch (error) {
        console.error('Error in submitEdit:', error);
    }
}

        async function deleteRestaurant(id) {
            try {
                const response = await fetch('/graphql', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                    },
                    body: JSON.stringify({
                        query: `mutation {
                            deleteRestaurant(_id: "${id}") {
                                _id
                            }
                        }`
                    })
                });

                if (!response.ok) {
                    throw new Error('Server response was not ok');
                }

                const result = await response.json();
                console.log('Server response:', result); // Log server response

                window.location.href = '/'; // Redirect to home after delete
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function navigateTo(url) {
            window.location.href = url;
        }
    </script>
</body>
</html>
